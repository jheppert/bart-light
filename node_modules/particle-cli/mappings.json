{
    "_commands": [
        "setup",
        "list",
        "call",
        "get",
        "device",
        "identify",
        "flash",
        "subscribe",
        "compile",
        "monitor",
        "login",
        "logout",
        "help"
    ],

    "call": {
        "maps": [ "function", "call" ],
        "usage": "particle call device_id function_name argument",
        "does": [
            "Calls a function registered on one of your Devices",
            "",
            "More information about registering a variable available here: ",
            "http://docs.particle.io/core/firmware/#spark-variable"
        ],
        "related": [
            "list - shows your devices, and what variables and functions are available",
            "get - retrieves a variable value from one of your Devices"
        ]
    },

    "get": {
        "maps": [ "variable", "get" ],
        "usage": "particle get device_id variable_name",
        "does": [
            "Retrieves a variable value from your device",
            "",
            "More information about registering a variable available here: ",
            "http://docs.particle.io/core/firmware/#spark-variable"
        ],
        "related": [
            "list - shows your devices, and what variables and functions are available",
            "call - runs a registered function on one of your devices"
        ]
    },

    "help": {
        "maps": [ "help" ],
        "usage": [
            "particle help",
            "particle help command_name"
        ],
        "does": [
            "Provides extra details and options for a given command"
        ]
    },


    "setup": {
        "maps": [ "setup" ],
        "usage": "particle setup",
        "does": [
            "Guides you through setting up an account, claiming a new device, and getting it on your network"
        ]
    },

    "identify": {
        "maps": [ "serial", "identify" ],
        "usage": "particle identify",
        "does": [
            "When your device is in connected via USB and in listening mode (flashing blue)",
            "this asks your device for its device ID"
        ]

    },

    "list": {
        "maps": [ "cloud", "list" ],
        "usage": "particle list",
        "does": [
            "Displays a list of your devices, as well as their variables and functions"
        ]
    },

    "core": {
        "_commands": [ "add", "remove", "rename" ],

        "add": {
            "maps": [ "cloud", "claim" ],
            "usage": "particle core add core_id",
            "does": "claims a core to your account"
        },
        "remove": {
            "maps": [ "cloud", "remove" ],
            "usage": "particle core remove core_id",
            "does": "releases a core from your account"
        },
        "rename": {
            "maps": [ "cloud", "name" ],
            "usage": "particle core rename core_id name",
            "does": "changes the friendly name of your core"
        }
    },

    "device": {
        "_commands": [ "add", "remove", "rename" ],

        "add": {
            "maps": [ "cloud", "claim" ],
            "usage": "particle device add device_id",
            "does": "claims a device to your account"
        },
        "remove": {
            "maps": [ "cloud", "remove" ],
            "usage": "particle device remove device_id",
            "does": "releases a device from your account"
        },
        "rename": {
            "maps": [ "cloud", "name" ],
            "usage": "particle device rename device_id name",
            "does": "changes the friendly name of your device"
        }
    },

    "flash": {
        "maps": [ "flash", "*" ],
        "usage": [
            "particle flash [--usb or device_id] firmware.bin",
            "particle flash [--usb or device_id] source_folder",
            "particle flash [--usb or device_id] file1.ino file2.cpp file2.h file3.cpp"
        ],
        "does": [
            "flash remotely pushes a compiled firmware binary to one of your devices over the air, or directly",
            "over USB / dfu.  If you send it one or more source files, or a directory of source, it will compile",
            "that remotely first, and push the compiled binary to your device instead, or in the case of code errors",
            "will show you the errors from the server.",
            "",
            "You can also substitute \"tinker\", \"voodoo\", or \"cc3000\" to flash the provided app.",
            "",
            "particle flash --usb tinker",
            "particle flash my_device tinker"
        ]
    },
    "subscribe": {
        "maps": [ "subscribe" ],
        "does": [
            "Subscribes to published events on the cloud, and pipes them to the console.  Special device name \"mine\" will subscribe to events from just your devices."
        ],
        "usage": [
            "particle subscribe",
            "particle subscribe mine",
            "particle subscribe event_name",
            "particle subscribe event_name mine",
            "particle subscribe event_name device_id"
        ]

    },
    "compile": {
        "maps": [ "cloud", "compile" ],
        "usage": [
            "particle compile device_type firmware.bin",
            "particle compile device_type source_folder",
            "particle compile device_type file1.ino file2.cpp file2.h file3.cpp"
        ],
        "does": [
            "Compiles one or more source files or a directory of source to a firmware binary for your device,",
            "or in the case of code errors will display those instead."
        ]
    },
    "monitor": {
        "maps": [ "variable", "monitor" ],
        "usage": [
            "particle monitor variable_name [--time]",
            "particle monitor device_name variable_name [--time]",
            "particle monitor device_name variable_name delay_value [--time]"
        ],
        "does": [
            "Repeatedly queries the Particle API every delay_value milliseconds",
            "for the value of the given variable on one or more devices."
        ]
    },
    "login": {
        "maps": [ "cloud", "login" ],
        "usage": "particle login",
        "does": [
            "Login and save an access token for interacting with your account on the Particle Cloud."
        ]
    },
    "logout": {
        "maps": [ "cloud", "logout" ],
        "usage": "particle logout",
        "does": [
            "Logout and optionally revoke the access token for your CLI session."
        ]
    },

    "publish": {
        "maps": [ "publish" ],
        "usage": [
            "particle publish event_name",
            "particle publish event_name some_data"
        ],
        "does": [
            "Note! This command is part of a limited experimental beta, but should become available",
            "available during the summer.  The API endpoints or format may change before it's released.",
            "",
            "Publishes an event to the cloud that can be received by your devices or other subscribers"
        ]
    },

    "nyan": {
        "maps": [ "cloud", "nyan" ],
        "usage": [
            "particle cloud nyan",
            "particle cloud nyan my_device_id on",
            "particle cloud nyan my_device_id off",
            "particle cloud nyan all on",
            "particle cloud nyan [on/off]",
            "particle cloud nyan [device_id/all] [on/off]"
        ],
        "does": [
            "That's weird, huh, I guess the description for this mysterious command is missing..."
        ]
    },

    "--version": {
        "maps": [ "help", "version" ],
        "usage": [
            "particle --version",
            "particle help version"
        ],
        "does": [
            "Shows the current version of the CLI"
        ]
    },

    "_templates": {
        "help": null

    }
}
